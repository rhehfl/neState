name: Publish on tag (yarn berry + npm publish)

on:
  push:
    tags:
      - "v*"

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      CI: true
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node (enable Corepack for Yarn Berry)
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: "https://registry.npmjs.org"
          always-auth: true
      - run: corepack enable

      # Yarn Berry 캐시
      - name: Cache Yarn Berry artifacts
        uses: actions/cache@v4
        with:
          path: |
            .yarn/cache
            .yarn/unplugged
            .yarn/build-state.yml
            .yarn/install-state.gz
          key: yarn-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
          restore-keys: yarn-${{ runner.os }}-

      - name: Install (Yarn PnP)
        run: yarn install

      - name: Verify version equals tag
        run: |
          PKG_VER=$(node -p "require('./package.json').version")
          TAG=${GITHUB_REF_NAME#v}
          [ "$PKG_VER" = "$TAG" ] || { echo "version $PKG_VER != tag $TAG"; exit 1; }

      - name: Typecheck & Build
        run: |
          yarn typecheck
          yarn build

      - name: npm whoami (sanity)
        env:
          NODE_AUTH_TOKEN: ${{ secrets.PACKAGE_PUBLISH_KEY_NPM }} # Automation 토큰
        run: npm whoami

      - name: Publish to npm (skip npm life-cycle scripts)
        env:
          NODE_AUTH_TOKEN: ${{ secrets.PACKAGE_PUBLISH_KEY_NPM }} # Automation 토큰
        run: npm publish --provenance --access public --ignore-scripts
